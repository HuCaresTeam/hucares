/* 
 * OpenALPR Cloud API
 *
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace OpenAlprApi.Model
{
    /// <summary>
    /// VehicleDetails
    /// </summary>
    [DataContract]
    public partial class VehicleDetails :  IEquatable<VehicleDetails>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="VehicleDetails" /> class.
        /// </summary>
        /// <param name="Color">Color.</param>
        /// <param name="Make">Make.</param>
        /// <param name="MakeModel">MakeModel.</param>
        /// <param name="BodyType">BodyType.</param>
        public VehicleDetails(List<VehicleCandidate> Color = null, List<VehicleCandidate> Make = null, List<VehicleCandidate> MakeModel = null, List<VehicleCandidate> BodyType = null)
        {
            this.Color = Color;
            this.Make = Make;
            this.MakeModel = MakeModel;
            this.BodyType = BodyType;
        }
        
        /// <summary>
        /// Gets or Sets Color
        /// </summary>
        [DataMember(Name="color", EmitDefaultValue=false)]
        public List<VehicleCandidate> Color { get; set; }
        /// <summary>
        /// Gets or Sets Make
        /// </summary>
        [DataMember(Name="make", EmitDefaultValue=false)]
        public List<VehicleCandidate> Make { get; set; }
        /// <summary>
        /// Gets or Sets MakeModel
        /// </summary>
        [DataMember(Name="make_model", EmitDefaultValue=false)]
        public List<VehicleCandidate> MakeModel { get; set; }
        /// <summary>
        /// Gets or Sets BodyType
        /// </summary>
        [DataMember(Name="body_type", EmitDefaultValue=false)]
        public List<VehicleCandidate> BodyType { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class VehicleDetails {\n");
            sb.Append("  Color: ").Append(Color).Append("\n");
            sb.Append("  Make: ").Append(Make).Append("\n");
            sb.Append("  MakeModel: ").Append(MakeModel).Append("\n");
            sb.Append("  BodyType: ").Append(BodyType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as VehicleDetails);
        }

        /// <summary>
        /// Returns true if VehicleDetails instances are equal
        /// </summary>
        /// <param name="other">Instance of VehicleDetails to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(VehicleDetails other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Color == other.Color ||
                    this.Color != null &&
                    this.Color.SequenceEqual(other.Color)
                ) && 
                (
                    this.Make == other.Make ||
                    this.Make != null &&
                    this.Make.SequenceEqual(other.Make)
                ) && 
                (
                    this.MakeModel == other.MakeModel ||
                    this.MakeModel != null &&
                    this.MakeModel.SequenceEqual(other.MakeModel)
                ) && 
                (
                    this.BodyType == other.BodyType ||
                    this.BodyType != null &&
                    this.BodyType.SequenceEqual(other.BodyType)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Color != null)
                    hash = hash * 59 + this.Color.GetHashCode();
                if (this.Make != null)
                    hash = hash * 59 + this.Make.GetHashCode();
                if (this.MakeModel != null)
                    hash = hash * 59 + this.MakeModel.GetHashCode();
                if (this.BodyType != null)
                    hash = hash * 59 + this.BodyType.GetHashCode();
                return hash;
            }
        }
    }

}
